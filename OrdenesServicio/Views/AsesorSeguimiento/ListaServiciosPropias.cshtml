@using Infragistics.Web.Mvc
@model IQueryable<ZOE.OS.Modelo.Model.Complex.OSSeguimiento>

@{
    ViewBag.Title = "Ordenes de Servicio Propias";
    Layout = "~/Views/Shared/_LayoutPanel.cshtml";
}

<h2>Mis Ordenes de Servicio</h2>

<script type="text/javascript">
    var statusIdCambiar;
    var rowSeleccionado;

    $('#gdOrdenes').live('iggridselectionrowselectionchanged', function (event, args) { RowSelectionChanged(args.row.index); });

    function RowSelectionChanged(row) {
        rowSeleccionado = row;
        var cell = $("#gdOrdenes").igGrid('cellAt', 0, row);
        var ticket = $(cell).text();
        var key = $('.selector').igGrid('option', 'primaryKey');
        $('input[name=ticketid]').val(ticket);
    }

    function clearValidationSummary() {
        $('.field-validation-error')
               .removeClass('field-validation-error')
                .addClass('field-validation-valid');

        $('.input-validation-error')
                .removeClass('input-validation-error')
                 .addClass('valid');

    }

    //Forma para cambiar de status una actividad
    $(function () {
        $("#dialog-form-status").
         dialog({
             autoOpen: false,
             height: 300,
             width: 710,
             modal: true,
             buttons: {
                 "Cancelar": function () {
                     $(this).dialog("close");
                 },

                 "Aceptar": function () {
                     var bValid = true;

                     bValid = $("form[name='form-reg-status']").validate().form();

                     if (bValid) {
                         var enviarCorreo = false;
                         //Verificar si se esta terminando la orden de servicio y si esta seleccionado el indicador de notificar al contacto
                         if (statusIdCambiar == 3) {
                             if ($("#chkNotificarContacto").attr('checked') == false) {
                                 $("#dialog-confirm").dialog("open");
                                 return false;
                             }
                             else {
                                 enviarCorreo = true
                             }
                         }

                         CambiarStatus(enviarCorreo);

                         $(this).dialog("close");
                     }
                 }
             },

             close: function () {
                 clearValidationSummary();
                 $('#observacion').val("")
                 $("div#divChkBox").hide();
             }
         });

        $("#terminar-os")
        .button()
        .click(function () {
            if (rowSeleccionado == null) {
                alert('Favor de seleccionar un ticket para cambiar su status')
                return false;
            }
            statusIdCambiar = 3;
            $("div#divChkBox").show();

            $('#mensaje-status-cambiar').text("Establecer la orden de servicio como Terminada");

            $("#dialog-form-status").dialog("open");
        });

        $("#cerrar-os")
        .button()
        .click(function () {
            if (rowSeleccionado == null) {
                alert('Favor de seleccionar un ticket para cambiar su status')
                return false;
            }
            statusIdCambiar = 4;

            $('#mensaje-status-cambiar').text("Cerrar esta orden de servicio");

            $("#dialog-form-status").dialog("open");
        });

        $("#lista-servicio-seguimiento")
        .button()
        .click(function () {
            if (rowSeleccionado == null) {
                alert('Favor de seleccionar un ticket para ver el seguimiento')
                return false;
            }
        });

    });

    $(function () {
        $("#dialog-confirm").dialog({
            autoOpen: false,
            dialogClass: 'no-close',
            resizable: false,
            height: 180,
            width: 400,
            modal: true,
            buttons: {
                "No": function () {
                    $(this).dialog("close");
                    CambiarStatus(false);
                },
                "Si": function () {
                    $(this).dialog("close");
                    CambiarStatus(true);
                }
            }
        });
    });

    function CambiarStatus(enviarCorreo) {
        var cambioStatus = {
            Ticket: $('#ticketid').val(),
            StatusId: statusIdCambiar,
            Observaciones: $('#observacion').val(),
            NotificarPorCorreoContacto: enviarCorreo
        };

        $.ajax({
            url: '@Url.Content("~/AsesorSeguimiento/CambiarStatusOrdenServicio")',
            type: 'POST',
            data: JSON.stringify(cambioStatus),
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.success) {
                    var cell = $("#gdOrdenes").igGrid('cellAt', 4, rowSeleccionado);
                    $(cell).text(data.cambioStatusMV.StatusCambioDescr);
                }
                else {
                    alert(data.cambioStatusMV.Mensaje);
                }
            },
            error: function () {
                alert("proceso cancelado !, Ocurrio un error al tratar de cambiar el estatus");
            }
        });

        $("#dialog-form-status").dialog("close");
    }
</script>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@if (Model.Count() > 0)
{
 @(Html.Infragistics().Grid<ZOE.OS.Modelo.Model.Complex.OSSeguimiento>()
   .ID("gdOrdenes")
   .AutoGenerateColumns(false)
   .PrimaryKey("Ticket")
   .FixedHeaders(false)
   .AutoAdjustHeight(true)
   .Columns(column =>
       {
           column.For(x => x.Ticket).DataType("long").HeaderText("No. Ticket");
           column.For(x => x.Descripcion).HeaderText("Descripción");
           column.For(x => x.Cliente).DataType("string").HeaderText("Cliente/Empresa");
           column.For(x => x.Contacto).DataType("string").HeaderText("Contacto");
           column.For(x => x.Status).DataType("string").HeaderText("Status");
           column.For(x => x.Fecha).Format("dateTime").HeaderText("Fecha Registro");
           column.For(x => x.FechaUlitmoMovimiento).Format("dateTime").HeaderText("Fecha Ultimo Movimiento");
       })
    .Features(features =>
        {
            features.Selection().Activation(true).Mode(SelectionMode.Row).MultipleSelection(false);
            features.Paging()
               .ShowPageSizeDropDown(false)
               .ShowPagerRecordsLabel(false)
               .PageSize(10)
               .PrevPageLabelText("Anterior")
               .NextPageLabelText("Siguiente")
               .PageSizeDropDownLabel("Mostrar")
               .PageSizeDropDownTrailingLabel("Registros");
            features.Sorting().Mode(SortingMode.Single).ColumnSettings(settings =>
                {
                    settings.ColumnSetting().ColumnKey("Ticket").AllowSorting(true);
                });
            features.Filtering()
                .Mode(FilterMode.Simple)
                .RenderFitlerButton(true)
                .ShowEmptyConditions(false)
                .ShowNullConditions(false)
                .RenderFitlerButton(true)
                .Type(OpType.Remote);
        })
                   .DataSourceUrl(Url.Action("ListaServiciosPropias"))
    .DataBind()
    .Render()
   )
   
   <p></p>
   
   using (Html.BeginForm("VerSeguimiento", "AsesorSeguimiento", FormMethod.Post))
   {
      <input type="hidden" id='ticketid' name='ticketid' value='' /> 
      <input type="submit" id='lista-servicio-seguimiento' title='Ver y Agregar Actividades' name="btnSubmit" value="Seguimiento"/>
      <text> | Cambiar Estado de la Orden de Servicio Seleccionada </text>      
      <button type="button" id='terminar-os' title='Poner como Terminada la Orden de Servicio seleccionada' name="terminar-os" value="Terminar">Terminar</button>    
      <button type="button" id='cerrar-os' title='Poner como Cerrada la Orden de Servicio seleccionada' name="cerrar-os" value="Cerrar">Cerrar</button> 
   }

}
else
{
    <p>No se encontraron registros</p>
}  

<div id="dialog-form-status" title="Cambiar Estatus">

    @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "form-reg-status", id = "actividadForm" }))
    {
        @Html.ValidationSummary(true)
        
        <div>
           <label id="mensaje-status-cambiar"></label>
        </div>       
        <p></p> 
        <table>
            <tr>                
                <td class="display-label-forma-captura-dialog">
                    Observaciones:
                </td>
                <td>
                    <textarea class="text-box multi-line" data-val="true" data-val-required="La observacion es requerida" id="observacion" name="observacion">
                    </textarea>
                    <div>
                    <span class="field-validation-valid" data-valmsg-for="observacion" data-valmsg-replace="true"></span>
                    </div>
                </td>
            </tr>            
        </table>
        <p></p>
        <div id="divChkBox" style="display:none">
            <input type="checkbox" name="checkbox" id="chkNotificarContacto" value="value" />
            <label for="checkbox_id">Notificar por correo electrónico al contacto</label>
        </div>
    }

</div>

<div id="dialog-confirm" title="Notificar al contacto">
  <p>
  <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
   La opcion de notificar por correo electronico al contacto esta desactivada.
   Desea enviar el correo de notificación? 
  </p>
</div> 